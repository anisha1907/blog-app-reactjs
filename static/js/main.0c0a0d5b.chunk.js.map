{"version":3,"sources":["Components/Page.js","screens/Home.js","screens/About.js","articles.js","Components/Article.js","screens/Blog.js","App.js","serviceWorker.js","index.js"],"names":["Page","document","title","this","props","className","subtitle","content","Component","Home","About","articles","id","slug","excerpt","inMemoryArticles","getAll","callback","getBySlug","foundArticle","i","length","Article","state","article","match","params","Articles","setState","dangerouslySetInnerHTML","__html","sanitizeHtml","Blog","existingUrl","path","articlesList","map","key","to","exact","render","component","App","searchText","handleSearchInput","event","target","valur","handleSearchSubmit","text","history","push","pathname","alert","handleSearchKeyUp","preventDefault","keyCode","handleFormSubmit","e","Form","inline","onSubmit","FormControl","onChange","value","onKeyUp","type","placeholder","Button","onClick","variant","activeClassName","React","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0c0a0d5b.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nclass Page extends Component{\r\n    componentDidMount(){\r\n        document.title=this.props.title;\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <main>\r\n                <section className=\"head is-dark\">\r\n                    <div className=\"head-body\">\r\n                        <div className=\"container\">\r\n                            <h1 className=\"title\">{this.props.title}</h1>\r\n                            <h2 className=\"subtitle\">{this.props.subtitle}</h2>\r\n\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section className=\"page-content\">\r\n                    <div className=\"container\">{this.props.content}</div>\r\n                </section>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page;","import React , {Component} from 'react';\r\nimport Page from '../Components/Page';\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <Page title=\"Blog Website\" subtitle=\"This is the Home Page\" content=\"CipherSchools provide quality education\"/>\r\n            \r\n        );\r\n    }\r\n}\r\nexport default Home;","import React,{Component} from 'react';\r\nimport Page from '../Components/Page';\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <Page title=\"About Us\" subtitle=\"This is the About page\" content=\"visit our website to know more about us\"/>\r\n        );\r\n    }\r\n}\r\nexport default About;","let articles=[\r\n    { id:1, title:'First Blog Post', slug: 'first-blog-post', excerpt:\"This is an excerpt from first Blog Post\", content: \"<b>Post Heading <br><b><i> Content starts from here <i>\"},\r\n    { id:2, title:'Second Blog Post', slug: 'second-blog-post', excerpt:'This is an excerpt from the second blog post', content: 'Second article starts here. <br> Author: XYZ'},\r\n    { id:3, title:'Third Blog Post', slug: 'third-blog-post', excerpt:'Third Article excerpt', content:\" This is the third article on the blog\"},\r\n];\r\n\r\nlet inMemoryArticles ={\r\n    getAll(callback) {\r\n        callback(articles);\r\n    },\r\n    getBySlug(slug, callback){\r\n        let foundArticle=null;\r\n\r\n        for (let i=0;i<articles.length;i++){\r\n            if (articles[i].slug===slug){\r\n                foundArticle = articles[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        callback(foundArticle);\r\n    }\r\n};\r\n\r\nexport default inMemoryArticles;","import React , {Component} from 'react';\r\nimport Articles from '../articles';\r\nimport sanitizeHtml from 'sanitize-html';\r\n\r\nclass Article extends Component{\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            article:{}\r\n        };\r\n    }\r\n\r\n    componentWillMount(){\r\n        let slug=this.props.match.params.slug;\r\n\r\n        Articles.getBySlug(slug, article=>{\r\n            this.setState({article});\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        let{title}=this.state.article;\r\n        document.title='Blog - '+title;\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <article>\r\n                <h2 className=\"is-size-2\">{this.state.article.title}</h2>\r\n                <p dangerouslySetInnerHTML={{__html:sanitizeHtml(this.state.article.content)}}/>\r\n\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Article;","import React, {Component} from 'react';\r\nimport {Link,Route} from 'react-router-dom';\r\nimport Page from '../Components/Page';\r\nimport Article from '../Components/Article';\r\nimport Articles from '../articles';\r\n\r\nclass Blog extends Component{\r\n    \r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            articles:[],\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        Articles.getAll(articles=>{\r\n            this.setState({articles});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let existingUrl=this.props.match.path;\r\n        let articlesList = this.state.articles.map(article=>{\r\n            return(\r\n                <article key = {article.id}>\r\n                    <h2 className=\"is-size-3\"><Link to={existingUrl+ '/' + article.slug}>{article.title}</Link></h2>\r\n                    <p>{article.excerpt}</p>\r\n                </article>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <Page title = \"Welcome to the Blog posts!\" subtitle=\"\"></Page>\r\n                <div className=\"container\">\r\n                    <Route exact={true} path=\"/blog\" render={()=>(\r\n                        <div> {articlesList} </div>\r\n                    )}/>\r\n                \r\n                <Route exact={true} path=\"/blog\" render={() => {\r\n                    document.title = 'Blog'\r\n                    return '';\r\n                }}/>\r\n                <Route exact={true} path=\"/blog/:slug\" component={Article}/>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, NavLink, Link} from 'react-router-dom';\nimport {Form, Button, FormControl} from 'react-bootstrap'\nimport Home from './screens/Home';\nimport About from './screens/About';\nimport Blog from './screens/Blog';\n\n\nclass App extends React.Component{\n\n  state={\n    searchText:\"\"\n  };\n\n  handleSearchInput=event=>{\n    this.setState({\n      searchText:event.target.valur\n    });\n  };\n\n  handleSearchSubmit=()=>{\n    if(this.state.searchText){\n      let text=this.state.searchText;\n      this.setState({searchText:\"\"})\n      this.props.history.push({\n        pathname:'/results',\n        state:{searchText:text}\n      });\n    }else{\n      alert(\"Please enter some search text!!\");\n    }\n  };\n\n  handleSearchKeyUp=event=>{\n    event.preventDefault();\n    if(event.key==='Enter' && event.keyCode===13){\n      this.handleSearchSubmit();\n    }\n  }\n\n  handleFormSubmit=e=>e.preventDefault();\n\n  render(){\n    return(\n      <div>\n        <Router>\n        <nav className=\"navbar mr-auto\">\n          <div className=\"container\">\n          <div className=\"navbar-brand\">\n              <Link to=\"/\"className=\"brand-text\">CipherSchools</Link>\n          </div>\n          <Form inline onSubmit={this.handleFormSubmit}>\n                        <FormControl\n                            onChange={this.handleSearchInput}\n                            value={this.state.searchText}\n                            onKeyUp={this.handleSearchKeyUp}\n                            type=\"text\"\n                            placeholder=\"Search\"\n                            className=\"mr-sm-2\"\n                        />\n                        <Button onClick={this.handleSearchSubmit} variant=\"outline-info\">\n                            Search\n                        </Button>\n                    </Form>\n              <div id=\"navMenu\" className=\"navbar-menu ml-auto\" >\n                <div className=\"navbar-start\">\n                  <NavLink to=\"/\" exact activeClassName=\"is-active\" className=\"navbar-item\">Home</NavLink>\n                  <NavLink to=\"/about\" exact activeClassName=\"is-active\" className=\"navbar-item\">About</NavLink>\n                  <NavLink to=\"/blog\" exact activeClassName=\"is-active\" className=\"navbar-item\">Blog</NavLink> \n                </div>\n                \n                \n              </div>\n            </div>\n          \n        </nav>\n\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/blog\" component={Blog}/>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}